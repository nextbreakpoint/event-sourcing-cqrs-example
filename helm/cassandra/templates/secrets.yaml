{{- $fullname := include "service.fullname" . -}}
{{- $name := include "service.name" . -}}
{{- $chart := include "service.chart" . -}}
{{- $root := . }}
apiVersion: v1
kind: Secret
metadata:
  name: '{{ $root.Values.secretName | default "cassandra" }}.{{ $root.Release.Revision | default "1" }}'
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    chart: {{ $chart }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
type: Opaque
stringData:
  init.cql: |
    CREATE ROLE IF NOT EXISTS admin WITH PASSWORD = '{{ $root.Values.adminPassword | default "password" }}' AND LOGIN = true;

    GRANT ALL PERMISSIONS ON ALL KEYSPACES TO admin;

    CREATE ROLE IF NOT EXISTS verticle WITH PASSWORD = '{{ $root.Values.verticlePassword | default "password" }}' AND LOGIN = true;

    CREATE KEYSPACE IF NOT EXISTS designs_aggregate WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };

    GRANT ALL PERMISSIONS ON KEYSPACE designs_aggregate TO verticle;

    USE designs_aggregate;

    CREATE TABLE IF NOT EXISTS MESSAGE (
      MESSAGE_KEY TEXT,
      MESSAGE_VALUE TEXT,
      MESSAGE_TOKEN TEXT,
      MESSAGE_UUID UUID,
      MESSAGE_TYPE TEXT,
      MESSAGE_SOURCE TEXT,
      MESSAGE_TIMESTAMP TIMESTAMP,
      PRIMARY KEY (MESSAGE_KEY, MESSAGE_TOKEN)
    ) WITH CLUSTERING ORDER BY (MESSAGE_TOKEN ASC);

    CREATE INDEX IF NOT EXISTS MESSAGE_UUID_IDX ON MESSAGE (MESSAGE_UUID);

    CREATE TABLE IF NOT EXISTS DESIGN (
      DESIGN_UUID UUID,
      DESIGN_DATA TEXT,
      DESIGN_CHECKSUM TEXT,
      DESIGN_REVISION TEXT,
      DESIGN_STATUS TEXT,
      DESIGN_PUBLISHED BOOLEAN,
      DESIGN_LEVELS INT,
      DESIGN_BITMAP BLOB,
      DESIGN_CREATED TIMESTAMP,
      DESIGN_UPDATED TIMESTAMP,
      COMMAND_UUID UUID,
      COMMAND_USER UUID,
      PRIMARY KEY (DESIGN_UUID)
    );

    CREATE KEYSPACE IF NOT EXISTS designs_command WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };

    GRANT ALL PERMISSIONS ON KEYSPACE designs_command TO verticle;

    USE designs_command;

    CREATE TABLE IF NOT EXISTS MESSAGE (
      MESSAGE_KEY TEXT,
      MESSAGE_VALUE TEXT,
      MESSAGE_TOKEN TEXT,
      MESSAGE_UUID UUID,
      MESSAGE_TYPE TEXT,
      MESSAGE_SOURCE TEXT,
      MESSAGE_TIMESTAMP TIMESTAMP,
      PRIMARY KEY (MESSAGE_KEY, MESSAGE_TOKEN)
    ) WITH CLUSTERING ORDER BY (MESSAGE_TOKEN ASC);

    CREATE INDEX IF NOT EXISTS MESSAGE_UUID_IDX ON MESSAGE (MESSAGE_UUID);

