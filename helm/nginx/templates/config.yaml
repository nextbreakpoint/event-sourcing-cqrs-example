{{- $fullname := include "service.fullname" . -}}
{{- $name := include "service.name" . -}}
{{- $chart := include "service.chart" . -}}
{{- $root := . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: '{{ $root.Values.configName | default "nginx" }}.{{ $root.Release.Revision | default "1" }}'
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    chart: {{ $chart }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
data:
  nginx.conf: |
        worker_processes auto;
        worker_cpu_affinity auto;
        
        events {
            worker_connections 512;
        }
        
        user nginx nginx;
        
        http {
            ssl_session_cache     shared:SSL:10m;
            ssl_session_timeout   10m;
            
            upstream designs_GET {
              server designs-query.services.svc.cluster.local:8080;
            }
        
            upstream designs_HEAD {
              server designs-query.services.svc.cluster.local:8080;
            }
        
            upstream designs_OPTIONS {
              server designs-command.services.svc.cluster.local:8080;
            }
        
            upstream designs_DELETE {
              server designs-command.services.svc.cluster.local:8080;
            }
        
            upstream designs_PATCH {
              server designs-command.services.svc.cluster.local:8080;
            }
        
            upstream designs_POST {
              server designs-command.services.svc.cluster.local:8080;
            }
        
            upstream designs_PUT {
              server designs-command.services.svc.cluster.local:8080;
            }
      
            server {
                listen 8000 default_server;
                server_name _;
        
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                
                proxy_connect_timeout 60;
                proxy_send_timeout 60;
                proxy_read_timeout 60;
      
                resolver kube-dns.kube-system.svc.cluster.local valid=30s;
      
                location /v1/designs/watch {
                    proxy_set_header Connection '';
                    proxy_http_version 1.1;
                    chunked_transfer_encoding off;
                    proxy_buffering off;
                    proxy_cache off;
                    set $upstream_location designs-watch.services.svc.cluster.local:8080;
                    proxy_pass http://$upstream_location$request_uri;
                    limit_except GET {
                        allow all;
                    }
                }
                    
                location /v1/designs/validate {
                    set $upstream_location designs-render.services.svc.cluster.local:8080;
                    proxy_pass http://$upstream_location$request_uri;
                    limit_except POST {
                        allow all;
                    }
                }
                    
                location /v1/designs/download {
                    set $upstream_location designs-render.services.svc.cluster.local:8080;
                    proxy_pass http://$upstream_location$request_uri;
                    limit_except POST {
                        allow all;
                    }
                }
                    
                location /v1/designs/upload {
                    set $upstream_location designs-render.services.svc.cluster.local:8080;
                    proxy_pass http://$upstream_location$request_uri;
                    limit_except POST {
                        allow all;
                    }
                }
                    
                location /v1/designs {
                    proxy_pass http://designs_$request_method$request_uri;
                    limit_except OPTIONS GET POST PUT PATCH DELETE {
                        allow all;
                    }
                }
                    
                location /v1/accounts {
                    set $upstream_location accounts.services.svc.cluster.local:8080;
                    proxy_pass http://$upstream_location$request_uri;
                    limit_except OPTIONS GET POST {
                        allow all;
                    }
                }
                    
                location /v1/auth {
                    set $upstream_location authentication.services.svc.cluster.local:8080;
                    proxy_pass http://$upstream_location$request_uri;
                    limit_except OPTIONS GET {
                        allow all;
                    }
                }
                
                location / {
                    set $upstream_location frontend.services.svc.cluster.local:8080;
                    proxy_pass http://$upstream_location$request_uri;
                }
            }
        }
