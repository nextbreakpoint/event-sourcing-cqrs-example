version: '3.4'
services:
  shop-nginx-int:
    labels:
        service: shop-nginx-int
    image: ${NGINX_IMAGE}
    volumes:
      - storage:/data
    ports:
      - target: 80
        published: 7080
        protocol: tcp
        mode: ingress
      - target: 443
        published: 7443
        protocol: tcp
        mode: ingress
    logging:
      options:
        labels: "service"
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role == worker
          - node.labels.public == false
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 256M
    configs:
      - source: server_conf_int
        target: /etc/nginx/nginx.conf
        uid: '1000'
        gid: '1000'
        mode: 0440
    secrets:
      - source: ca_and_server_cert
        target: /etc/nginx/ca_and_server_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: server_key
        target: /etc/nginx/server_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_key
        target: /etc/nginx/client_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_cert
        target: /etc/nginx/client_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: ca_cert
        target: /etc/nginx/ca_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
  shop-nginx-ext-a:
    labels:
        service: shop-nginx-ext
    image: ${NGINX_IMAGE}
    volumes:
      - storage:/data
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    logging:
      options:
        labels: "service"
    deploy:
      mode: global
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == worker
          - node.labels.public == true
          - node.labels.zone == a
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 256M
    configs:
      - source: server_conf_ext_a
        target: /etc/nginx/nginx.conf
        uid: '1000'
        gid: '1000'
        mode: 0440
    secrets:
      - source: ca_and_server_cert
        target: /etc/nginx/ca_and_server_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: server_key
        target: /etc/nginx/server_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_key
        target: /etc/nginx/client_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_cert
        target: /etc/nginx/client_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: ca_cert
        target: /etc/nginx/ca_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
  shop-nginx-ext-b:
    labels:
        service: shop-nginx-ext
    image: ${NGINX_IMAGE}
    volumes:
      - storage:/data
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    logging:
      options:
        labels: "service"
    deploy:
      mode: global
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == worker
          - node.labels.public == true
          - node.labels.zone == b
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 256M
    configs:
      - source: server_conf_ext_b
        target: /etc/nginx/nginx.conf
        uid: '1000'
        gid: '1000'
        mode: 0440
    secrets:
      - source: ca_and_server_cert
        target: /etc/nginx/ca_and_server_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: server_key
        target: /etc/nginx/server_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_key
        target: /etc/nginx/client_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_cert
        target: /etc/nginx/client_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: ca_cert
        target: /etc/nginx/ca_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
  shop-nginx-ext-c:
    labels:
        service: shop-nginx-ext
    image: ${NGINX_IMAGE}
    volumes:
      - storage:/data
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    logging:
      options:
        labels: "service"
    deploy:
      mode: global
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == worker
          - node.labels.public == true
          - node.labels.zone == c
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 256M
    configs:
      - source: server_conf_ext_c
        target: /etc/nginx/nginx.conf
        uid: '1000'
        gid: '1000'
        mode: 0440
    secrets:
      - source: ca_and_server_cert
        target: /etc/nginx/ca_and_server_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: server_key
        target: /etc/nginx/server_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_key
        target: /etc/nginx/client_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: client_cert
        target: /etc/nginx/client_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: ca_cert
        target: /etc/nginx/ca_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
networks:
  default:
    external:
      name: services
volumes:
    storage:
configs:
  server_conf_int:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/nginx_int.conf
  server_conf_ext_a:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/nginx_ext_a.conf
  server_conf_ext_b:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/nginx_ext_b.conf
  server_conf_ext_c:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/nginx_ext_c.conf
secrets:
  ca_and_server_cert:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/ca_and_server_cert.pem
  server_key:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/server_key.pem
  client_key:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/client_key.pem
  client_cert:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/client_cert.pem
  ca_cert:
    file: ${ENVIRONMENT_SECRETS_PATH}/nginx/ca_cert.pem
