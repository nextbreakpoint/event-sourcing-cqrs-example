{{- $fullname := include "service.fullname" . -}}
{{- $name := include "service.name" . -}}
{{- $chart := include "service.chart" . -}}
{{- $root := . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: '{{ $root.Values.configName | default "elasticsearch" }}.{{ $root.Release.Revision | default "1" }}'
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    chart: {{ $chart }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
data:
  init.sh: |
    set -e

    cat <<EOF >/tmp/data.json
    {
      "settings": {
          "index": {
              "number_of_shards": 1,
              "number_of_replicas": 0
          }
      },
      "mappings": {
          "properties": {
              "userId": {
                  "type": "keyword"
              },
              "commandId": {
                  "type": "keyword"
              },
              "designId": {
                  "type": "keyword"
              },
              "data": {
                  "type": "text"
              },
              "checksum": {
                  "type": "keyword"
              },
              "status": {
                  "type": "keyword"
              },
              "modified": {
                  "type": "date",
                  "format": "date_time"
              }
          }
      }
    }
    EOF

    function makeIndex {
        RESULT=$(curl -s --head http://localhost:9200/$1 | head -n 1 | cut -d$' ' -f2)
        if [ $RESULT -eq 404 ]
        then
            echo "Creating index $1..."
            until curl -s -X PUT http://localhost:9200/designs -H 'content-type: application/json' -d @/tmp/data.json; do >&2 echo "Elasticsearch is unavailable - sleeping"; sleep 5; done &
            echo "Index $1 created"
        else
            echo "Index $1 already exists"
        fi
    }

    makeIndex designs
    makeIndex designs_draft

