{{- $fullname := include "service.fullname" . -}}
{{- $name := include "service.name" . -}}
{{- $chart := include "service.chart" . -}}
{{- $root := . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $root.Values.name | default "frontend" | quote }}
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    app: {{ $root.Values.name | default "frontend" | quote }}
    chart: {{ $chart }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
spec:
  replicas: {{ $root.Values.replicas | default 0 }}
  {{- if $root.Values.strategy }}
  strategy:
    {{ toYaml $root.Values.strategy | indent 4 | trim }}
  {{- end}}
  selector:
    matchLabels:
      app: {{ $root.Values.name | default "frontend" | quote }}
  template:
    metadata:
      {{- if $root.Values.annotations }}
      annotations:
        {{ toYaml $root.Values.annotations | indent 8 | trim }}
      {{- end}}
      labels:
        app: {{ $root.Values.name | default "frontend" | quote }}
    spec:
      serviceAccountName: {{ $root.Values.serviceAccount | default "frontend" }}
      {{- if $root.Values.image }}
      {{- if $root.Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ toYaml $root.Values.image.pullSecrets | indent 8 | trim }}
      {{- end}}
      {{- end}}
      volumes:
        - name: config-vol
          configMap:
            name: '{{ $root.Values.configName | default "frontend" }}.{{ $root.Release.Revision | default "1" }}'
        - name: secret-vol
          secret:
            secretName: {{ $root.Values.secretName | default "frontend" | quote }}
      containers:
        - name: {{ $root.Values.name | default "frontend" | quote }}
          image: "{{ $root.Values.image.registry }}{{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}"
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $root.Values.controlPort | default 8080 }}
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_PATH
              value: /etc/config.json
            - name: SECRETS_PATH
              value: /etc
          volumeMounts:
            - name: config-vol
              readOnly: true
              mountPath: /etc/config.json
              subPath: config.json
            - name: secret-vol
              readOnly: true
              mountPath: /etc/ca_cert.pem
              subPath: ca_cert.pem
            - name: secret-vol
              readOnly: true
              mountPath: /etc/server_cert.pem
              subPath: server_cert.pem
            - name: secret-vol
              readOnly: true
              mountPath: /etc/server_key.pem
              subPath: server_key.pem
          {{- if $root.Values.resources }}
          resources:
            {{ $root.Values.resources | toYaml | indent 12 | trim }}
          {{- end}}
          livenessProbe:
            httpGet:
              path: /browse/designs.html
              port: http
              scheme: HTTPS
            failureThreshold: 2
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /browse/designs.html
              port: http
              scheme: HTTPS
            failureThreshold: 2
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /browse/designs.html
              port: http
              scheme: HTTPS
            failureThreshold: 12
            timeoutSeconds: 2
            periodSeconds: 5