{{- $fullname := include "service.fullname" . -}}
{{- $name := include "service.name" . -}}
{{- $chart := include "service.chart" . -}}
{{- $root := . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: '{{ $root.Values.configName | default "designs-render" }}.{{ $root.Release.Revision | default "1" }}'
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    chart: {{ $chart }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
data:
  config.json: |
    {
      "host_port": "8080",

      "jwt_keystore_path": "/etc/keystore_auth.jceks",
      "jwt_keystore_type": "jceks",
      "jwt_keystore_secret": "${KEYSTORE_SECRET}",

      "origin_pattern": "{{ $root.Values.clientProtocol | default "http" }}://{{ $root.Values.clientDomain | default "localhost" }}(:[0-9]+)?",

      "kafka_bootstrap_servers": {{ $root.Values.kafkaServers | default "kafka.platform:9094" | quote }},
      "schema_registry_url": {{ $root.Values.schemaRegistryUrl | default "http://schema-registry.platform:8081" | quote }},
      "kafka_group_id": {{ $root.Values.kafkaGroupId | default "designs-render" | quote }},
      "message_source": {{ $root.Values.messageSource | default "service-designs" | quote }},
      "render_topic_prefix": {{ $root.Values.renderTopicPrefix | default "render" | quote }},

      "max_execution_time_in_millis": "30000000",

      "s3_endpoint": {{ $root.Values.s3Endpoint | default "http://minio.platform:9000" | quote }},
      "s3_bucket": {{ $root.Values.s3Bucket | default "tiles" | quote }}
    }
